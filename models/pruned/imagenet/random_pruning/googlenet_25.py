import torch
import torch.nn as nn
import torch.nn.functional as F

class GoogLeNet(nn.Module):
    def __init__(self, num_classes=10):
        super().__init__()

        self.conv1_conv = nn.Conv2d(3, 47, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        self.conv1_bn = nn.BatchNorm2d(47, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool1 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2_conv = nn.Conv2d(47, 53, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.conv2_bn = nn.BatchNorm2d(53, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv3_conv = nn.Conv2d(53, 168, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.conv3_bn = nn.BatchNorm2d(168, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception3a_branch1_conv = nn.Conv2d(168, 53, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch1_bn = nn.BatchNorm2d(53, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch2_0_conv = nn.Conv2d(168, 82, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch2_0_bn = nn.BatchNorm2d(82, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch2_1_conv = nn.Conv2d(82, 107, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3a_branch2_1_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch3_0_conv = nn.Conv2d(168, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch3_0_bn = nn.BatchNorm2d(12, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch3_1_conv = nn.Conv2d(12, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3a_branch3_1_bn = nn.BatchNorm2d(30, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception3a_branch4_1_conv = nn.Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch4_1_bn = nn.BatchNorm2d(28, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch1_conv = nn.Conv2d(218, 107, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch1_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch2_0_conv = nn.Conv2d(218, 107, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch2_0_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch2_1_conv = nn.Conv2d(107, 171, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3b_branch2_1_bn = nn.BatchNorm2d(171, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch3_0_conv = nn.Conv2d(218, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch3_0_bn = nn.BatchNorm2d(26, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch3_1_conv = nn.Conv2d(26, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3b_branch3_1_bn = nn.BatchNorm2d(84, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception3b_branch4_1_conv = nn.Conv2d(218, 55, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch4_1_bn = nn.BatchNorm2d(55, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool3 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception4a_branch1_conv = nn.Conv2d(417, 162, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch1_bn = nn.BatchNorm2d(162, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch2_0_conv = nn.Conv2d(417, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch2_0_bn = nn.BatchNorm2d(83, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch2_1_conv = nn.Conv2d(83, 178, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4a_branch2_1_bn = nn.BatchNorm2d(178, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch3_0_conv = nn.Conv2d(417, 14, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch3_0_bn = nn.BatchNorm2d(14, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch3_1_conv = nn.Conv2d(14, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4a_branch3_1_bn = nn.BatchNorm2d(38, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4a_branch4_1_conv = nn.Conv2d(417, 55, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch4_1_bn = nn.BatchNorm2d(55, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch1_conv = nn.Conv2d(433, 141, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch1_bn = nn.BatchNorm2d(141, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch2_0_conv = nn.Conv2d(433, 94, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch2_0_bn = nn.BatchNorm2d(94, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch2_1_conv = nn.Conv2d(94, 194, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4b_branch2_1_bn = nn.BatchNorm2d(194, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch3_0_conv = nn.Conv2d(433, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch3_0_bn = nn.BatchNorm2d(19, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch3_1_conv = nn.Conv2d(19, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4b_branch3_1_bn = nn.BatchNorm2d(52, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4b_branch4_1_conv = nn.Conv2d(433, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch4_1_bn = nn.BatchNorm2d(56, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch1_conv = nn.Conv2d(443, 107, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch1_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch2_0_conv = nn.Conv2d(443, 107, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch2_0_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch2_1_conv = nn.Conv2d(107, 216, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4c_branch2_1_bn = nn.BatchNorm2d(216, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch3_0_conv = nn.Conv2d(443, 23, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch3_0_bn = nn.BatchNorm2d(23, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch3_1_conv = nn.Conv2d(23, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4c_branch3_1_bn = nn.BatchNorm2d(54, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4c_branch4_1_conv = nn.Conv2d(443, 54, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch4_1_bn = nn.BatchNorm2d(54, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch1_conv = nn.Conv2d(431, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch1_bn = nn.BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch2_0_conv = nn.Conv2d(431, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch2_0_bn = nn.BatchNorm2d(116, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch2_1_conv = nn.Conv2d(116, 249, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4d_branch2_1_bn = nn.BatchNorm2d(249, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch3_0_conv = nn.Conv2d(431, 30, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch3_0_bn = nn.BatchNorm2d(30, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch3_1_conv = nn.Conv2d(30, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4d_branch3_1_bn = nn.BatchNorm2d(58, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4d_branch4_1_conv = nn.Conv2d(431, 53, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch4_1_bn = nn.BatchNorm2d(53, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch1_conv = nn.Conv2d(456, 217, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch1_bn = nn.BatchNorm2d(217, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch2_0_conv = nn.Conv2d(456, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch2_0_bn = nn.BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch2_1_conv = nn.Conv2d(136, 260, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4e_branch2_1_bn = nn.BatchNorm2d(260, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch3_0_conv = nn.Conv2d(456, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch3_0_bn = nn.BatchNorm2d(26, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch3_1_conv = nn.Conv2d(26, 113, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4e_branch3_1_bn = nn.BatchNorm2d(113, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4e_branch4_1_conv = nn.Conv2d(456, 113, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch4_1_bn = nn.BatchNorm2d(113, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool4 = nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception5a_branch1_conv = nn.Conv2d(703, 221, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch1_bn = nn.BatchNorm2d(221, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch2_0_conv = nn.Conv2d(703, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch2_0_bn = nn.BatchNorm2d(143, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch2_1_conv = nn.Conv2d(143, 266, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5a_branch2_1_bn = nn.BatchNorm2d(266, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch3_0_conv = nn.Conv2d(703, 27, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch3_0_bn = nn.BatchNorm2d(27, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch3_1_conv = nn.Conv2d(27, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5a_branch3_1_bn = nn.BatchNorm2d(111, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception5a_branch4_1_conv = nn.Conv2d(703, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch4_1_bn = nn.BatchNorm2d(112, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch1_conv = nn.Conv2d(710, 330, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch1_bn = nn.BatchNorm2d(330, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch2_0_conv = nn.Conv2d(710, 170, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch2_0_bn = nn.BatchNorm2d(170, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch2_1_conv = nn.Conv2d(170, 330, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5b_branch2_1_bn = nn.BatchNorm2d(330, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch3_0_conv = nn.Conv2d(710, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch3_0_bn = nn.BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch3_1_conv = nn.Conv2d(40, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5b_branch3_1_bn = nn.BatchNorm2d(112, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception5b_branch4_1_conv = nn.Conv2d(710, 107, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch4_1_bn = nn.BatchNorm2d(107, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.avgpool = nn.AdaptiveAvgPool2d(output_size=(1, 1))
        self.fc = nn.Linear(in_features=879, out_features=1000, bias=True)

    def transform_input(self, x):
        x_ch0 = torch.unsqueeze(x[:,0],1) * (0.229/0.5) + (0.485-0.5) / 0.5
        x_ch1 = torch.unsqueeze(x[:,1],1) * (0.224/0.5) + (0.456-0.5) / 0.5
        x_ch2 = torch.unsqueeze(x[:,2],1) * (0.225/0.5) + (0.406-0.5) / 0.5
        x = torch.cat((x_ch0, x_ch1, x_ch2), 1)
        return x

    def forward(self, x):
        x = self.transform_input(x)
        x = self.conv1_conv(x)
        x = self.conv1_bn(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool1(x)
        x = self.conv2_conv(x)
        x = self.conv2_bn(x)
        x = F.relu(x, inplace=True)
        x = self.conv3_conv(x)
        x = self.conv3_bn(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool2(x)
        x_0 = x
        x_0 = self.inception3a_branch1_conv(x_0)
        x_0 = self.inception3a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception3a_branch2_0_conv(x_1)
        x_1 = self.inception3a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception3a_branch2_1_conv(x_1)
        x_1 = self.inception3a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception3a_branch3_0_conv(x_2)
        x_2 = self.inception3a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception3a_branch3_1_conv(x_2)
        x_2 = self.inception3a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception3a_branch4_0(x_3)
        x_3 = self.inception3a_branch4_1_conv(x_3)
        x_3 = self.inception3a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception3b_branch1_conv(x_0)
        x_0 = self.inception3b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception3b_branch2_0_conv(x_1)
        x_1 = self.inception3b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception3b_branch2_1_conv(x_1)
        x_1 = self.inception3b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception3b_branch3_0_conv(x_2)
        x_2 = self.inception3b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception3b_branch3_1_conv(x_2)
        x_2 = self.inception3b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception3b_branch4_0(x_3)
        x_3 = self.inception3b_branch4_1_conv(x_3)
        x_3 = self.inception3b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.maxpool3(x)
        x_0 = x
        x_0 = self.inception4a_branch1_conv(x_0)
        x_0 = self.inception4a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4a_branch2_0_conv(x_1)
        x_1 = self.inception4a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4a_branch2_1_conv(x_1)
        x_1 = self.inception4a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4a_branch3_0_conv(x_2)
        x_2 = self.inception4a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4a_branch3_1_conv(x_2)
        x_2 = self.inception4a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4a_branch4_0(x_3)
        x_3 = self.inception4a_branch4_1_conv(x_3)
        x_3 = self.inception4a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4b_branch1_conv(x_0)
        x_0 = self.inception4b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4b_branch2_0_conv(x_1)
        x_1 = self.inception4b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4b_branch2_1_conv(x_1)
        x_1 = self.inception4b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4b_branch3_0_conv(x_2)
        x_2 = self.inception4b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4b_branch3_1_conv(x_2)
        x_2 = self.inception4b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4b_branch4_0(x_3)
        x_3 = self.inception4b_branch4_1_conv(x_3)
        x_3 = self.inception4b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4c_branch1_conv(x_0)
        x_0 = self.inception4c_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4c_branch2_0_conv(x_1)
        x_1 = self.inception4c_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4c_branch2_1_conv(x_1)
        x_1 = self.inception4c_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4c_branch3_0_conv(x_2)
        x_2 = self.inception4c_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4c_branch3_1_conv(x_2)
        x_2 = self.inception4c_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4c_branch4_0(x_3)
        x_3 = self.inception4c_branch4_1_conv(x_3)
        x_3 = self.inception4c_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4d_branch1_conv(x_0)
        x_0 = self.inception4d_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4d_branch2_0_conv(x_1)
        x_1 = self.inception4d_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4d_branch2_1_conv(x_1)
        x_1 = self.inception4d_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4d_branch3_0_conv(x_2)
        x_2 = self.inception4d_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4d_branch3_1_conv(x_2)
        x_2 = self.inception4d_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4d_branch4_0(x_3)
        x_3 = self.inception4d_branch4_1_conv(x_3)
        x_3 = self.inception4d_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4e_branch1_conv(x_0)
        x_0 = self.inception4e_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4e_branch2_0_conv(x_1)
        x_1 = self.inception4e_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4e_branch2_1_conv(x_1)
        x_1 = self.inception4e_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4e_branch3_0_conv(x_2)
        x_2 = self.inception4e_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4e_branch3_1_conv(x_2)
        x_2 = self.inception4e_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4e_branch4_0(x_3)
        x_3 = self.inception4e_branch4_1_conv(x_3)
        x_3 = self.inception4e_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.maxpool4(x)
        x_0 = x
        x_0 = self.inception5a_branch1_conv(x_0)
        x_0 = self.inception5a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception5a_branch2_0_conv(x_1)
        x_1 = self.inception5a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception5a_branch2_1_conv(x_1)
        x_1 = self.inception5a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception5a_branch3_0_conv(x_2)
        x_2 = self.inception5a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception5a_branch3_1_conv(x_2)
        x_2 = self.inception5a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception5a_branch4_0(x_3)
        x_3 = self.inception5a_branch4_1_conv(x_3)
        x_3 = self.inception5a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception5b_branch1_conv(x_0)
        x_0 = self.inception5b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception5b_branch2_0_conv(x_1)
        x_1 = self.inception5b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception5b_branch2_1_conv(x_1)
        x_1 = self.inception5b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception5b_branch3_0_conv(x_2)
        x_2 = self.inception5b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception5b_branch3_1_conv(x_2)
        x_2 = self.inception5b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception5b_branch4_0(x_3)
        x_3 = self.inception5b_branch4_1_conv(x_3)
        x_3 = self.inception5b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.avgpool(x)
        x = x.view(x.size(0), -1)
        x = self.fc(x)
        return x

def googlenet(**kwargs):
    return GoogLeNet(**kwargs)
