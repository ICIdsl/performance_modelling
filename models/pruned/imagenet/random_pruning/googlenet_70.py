import torch
import torch.nn as nn
import torch.nn.functional as F

class GoogLeNet(nn.Module):
    def __init__(self, num_classes=10):
        super().__init__()

        self.conv1_conv = nn.Conv2d(3, 34, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        self.conv1_bn = nn.BatchNorm2d(34, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool1 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.conv2_conv = nn.Conv2d(34, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.conv2_bn = nn.BatchNorm2d(36, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.conv3_conv = nn.Conv2d(36, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.conv3_bn = nn.BatchNorm2d(88, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool2 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception3a_branch1_conv = nn.Conv2d(88, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch1_bn = nn.BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch2_0_conv = nn.Conv2d(88, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch2_0_bn = nn.BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch2_1_conv = nn.Conv2d(40, 73, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3a_branch2_1_bn = nn.BatchNorm2d(73, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch3_0_conv = nn.Conv2d(88, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch3_0_bn = nn.BatchNorm2d(4, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch3_1_conv = nn.Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3a_branch3_1_bn = nn.BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception3a_branch4_1_conv = nn.Conv2d(88, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3a_branch4_1_bn = nn.BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch1_conv = nn.Conv2d(137, 67, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch1_bn = nn.BatchNorm2d(67, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch2_0_conv = nn.Conv2d(137, 67, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch2_0_bn = nn.BatchNorm2d(67, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch2_1_conv = nn.Conv2d(67, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3b_branch2_1_bn = nn.BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch3_0_conv = nn.Conv2d(137, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch3_0_bn = nn.BatchNorm2d(20, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch3_1_conv = nn.Conv2d(20, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception3b_branch3_1_bn = nn.BatchNorm2d(49, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception3b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception3b_branch4_1_conv = nn.Conv2d(137, 33, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception3b_branch4_1_bn = nn.BatchNorm2d(33, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool3 = nn.MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception4a_branch1_conv = nn.Conv2d(245, 105, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch1_bn = nn.BatchNorm2d(105, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch2_0_conv = nn.Conv2d(245, 51, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch2_0_bn = nn.BatchNorm2d(51, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch2_1_conv = nn.Conv2d(51, 105, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4a_branch2_1_bn = nn.BatchNorm2d(105, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch3_0_conv = nn.Conv2d(245, 10, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch3_0_bn = nn.BatchNorm2d(10, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch3_1_conv = nn.Conv2d(10, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4a_branch3_1_bn = nn.BatchNorm2d(23, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4a_branch4_1_conv = nn.Conv2d(245, 31, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4a_branch4_1_bn = nn.BatchNorm2d(31, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch1_conv = nn.Conv2d(264, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch1_bn = nn.BatchNorm2d(88, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch2_0_conv = nn.Conv2d(264, 58, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch2_0_bn = nn.BatchNorm2d(58, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch2_1_conv = nn.Conv2d(58, 113, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4b_branch2_1_bn = nn.BatchNorm2d(113, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch3_0_conv = nn.Conv2d(264, 10, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch3_0_bn = nn.BatchNorm2d(10, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch3_1_conv = nn.Conv2d(10, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4b_branch3_1_bn = nn.BatchNorm2d(39, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4b_branch4_1_conv = nn.Conv2d(264, 27, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4b_branch4_1_bn = nn.BatchNorm2d(27, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch1_conv = nn.Conv2d(267, 58, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch1_bn = nn.BatchNorm2d(58, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch2_0_conv = nn.Conv2d(267, 70, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch2_0_bn = nn.BatchNorm2d(70, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch2_1_conv = nn.Conv2d(70, 114, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4c_branch2_1_bn = nn.BatchNorm2d(114, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch3_0_conv = nn.Conv2d(267, 13, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch3_0_bn = nn.BatchNorm2d(13, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch3_1_conv = nn.Conv2d(13, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4c_branch3_1_bn = nn.BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4c_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4c_branch4_1_conv = nn.Conv2d(267, 34, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4c_branch4_1_bn = nn.BatchNorm2d(34, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch1_conv = nn.Conv2d(238, 59, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch1_bn = nn.BatchNorm2d(59, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch2_0_conv = nn.Conv2d(238, 67, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch2_0_bn = nn.BatchNorm2d(67, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch2_1_conv = nn.Conv2d(67, 135, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4d_branch2_1_bn = nn.BatchNorm2d(135, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch3_0_conv = nn.Conv2d(238, 15, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch3_0_bn = nn.BatchNorm2d(15, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch3_1_conv = nn.Conv2d(15, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4d_branch3_1_bn = nn.BatchNorm2d(34, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4d_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4d_branch4_1_conv = nn.Conv2d(238, 31, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4d_branch4_1_bn = nn.BatchNorm2d(31, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch1_conv = nn.Conv2d(259, 137, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch1_bn = nn.BatchNorm2d(137, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch2_0_conv = nn.Conv2d(259, 77, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch2_0_bn = nn.BatchNorm2d(77, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch2_1_conv = nn.Conv2d(77, 176, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4e_branch2_1_bn = nn.BatchNorm2d(176, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch3_0_conv = nn.Conv2d(259, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch3_0_bn = nn.BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch3_1_conv = nn.Conv2d(16, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception4e_branch3_1_bn = nn.BatchNorm2d(62, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception4e_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception4e_branch4_1_conv = nn.Conv2d(259, 73, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception4e_branch4_1_bn = nn.BatchNorm2d(73, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool4 = nn.MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=True)
        self.inception5a_branch1_conv = nn.Conv2d(448, 134, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch1_bn = nn.BatchNorm2d(134, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch2_0_conv = nn.Conv2d(448, 85, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch2_0_bn = nn.BatchNorm2d(85, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch2_1_conv = nn.Conv2d(85, 155, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5a_branch2_1_bn = nn.BatchNorm2d(155, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch3_0_conv = nn.Conv2d(448, 17, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch3_0_bn = nn.BatchNorm2d(17, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch3_1_conv = nn.Conv2d(17, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5a_branch3_1_bn = nn.BatchNorm2d(59, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5a_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception5a_branch4_1_conv = nn.Conv2d(448, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5a_branch4_1_bn = nn.BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch1_conv = nn.Conv2d(412, 213, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch1_bn = nn.BatchNorm2d(213, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch2_0_conv = nn.Conv2d(412, 92, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch2_0_bn = nn.BatchNorm2d(92, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch2_1_conv = nn.Conv2d(92, 190, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5b_branch2_1_bn = nn.BatchNorm2d(190, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch3_0_conv = nn.Conv2d(412, 26, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch3_0_bn = nn.BatchNorm2d(26, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch3_1_conv = nn.Conv2d(26, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.inception5b_branch3_1_bn = nn.BatchNorm2d(59, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.inception5b_branch4_0 = nn.MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=True)
        self.inception5b_branch4_1_conv = nn.Conv2d(412, 78, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.inception5b_branch4_1_bn = nn.BatchNorm2d(78, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        self.avgpool = nn.AdaptiveAvgPool2d(output_size=(1, 1))
        self.fc = nn.Linear(in_features=540, out_features=1000, bias=True)

    def transform_input(self, x):
        x_ch0 = torch.unsqueeze(x[:,0],1) * (0.229/0.5) + (0.485-0.5) / 0.5
        x_ch1 = torch.unsqueeze(x[:,1],1) * (0.224/0.5) + (0.456-0.5) / 0.5
        x_ch2 = torch.unsqueeze(x[:,2],1) * (0.225/0.5) + (0.406-0.5) / 0.5
        x = torch.cat((x_ch0, x_ch1, x_ch2), 1)
        return x

    def forward(self, x):
        x = self.transform_input(x)
        x = self.conv1_conv(x)
        x = self.conv1_bn(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool1(x)
        x = self.conv2_conv(x)
        x = self.conv2_bn(x)
        x = F.relu(x, inplace=True)
        x = self.conv3_conv(x)
        x = self.conv3_bn(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool2(x)
        x_0 = x
        x_0 = self.inception3a_branch1_conv(x_0)
        x_0 = self.inception3a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception3a_branch2_0_conv(x_1)
        x_1 = self.inception3a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception3a_branch2_1_conv(x_1)
        x_1 = self.inception3a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception3a_branch3_0_conv(x_2)
        x_2 = self.inception3a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception3a_branch3_1_conv(x_2)
        x_2 = self.inception3a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception3a_branch4_0(x_3)
        x_3 = self.inception3a_branch4_1_conv(x_3)
        x_3 = self.inception3a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception3b_branch1_conv(x_0)
        x_0 = self.inception3b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception3b_branch2_0_conv(x_1)
        x_1 = self.inception3b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception3b_branch2_1_conv(x_1)
        x_1 = self.inception3b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception3b_branch3_0_conv(x_2)
        x_2 = self.inception3b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception3b_branch3_1_conv(x_2)
        x_2 = self.inception3b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception3b_branch4_0(x_3)
        x_3 = self.inception3b_branch4_1_conv(x_3)
        x_3 = self.inception3b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.maxpool3(x)
        x_0 = x
        x_0 = self.inception4a_branch1_conv(x_0)
        x_0 = self.inception4a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4a_branch2_0_conv(x_1)
        x_1 = self.inception4a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4a_branch2_1_conv(x_1)
        x_1 = self.inception4a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4a_branch3_0_conv(x_2)
        x_2 = self.inception4a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4a_branch3_1_conv(x_2)
        x_2 = self.inception4a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4a_branch4_0(x_3)
        x_3 = self.inception4a_branch4_1_conv(x_3)
        x_3 = self.inception4a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4b_branch1_conv(x_0)
        x_0 = self.inception4b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4b_branch2_0_conv(x_1)
        x_1 = self.inception4b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4b_branch2_1_conv(x_1)
        x_1 = self.inception4b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4b_branch3_0_conv(x_2)
        x_2 = self.inception4b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4b_branch3_1_conv(x_2)
        x_2 = self.inception4b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4b_branch4_0(x_3)
        x_3 = self.inception4b_branch4_1_conv(x_3)
        x_3 = self.inception4b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4c_branch1_conv(x_0)
        x_0 = self.inception4c_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4c_branch2_0_conv(x_1)
        x_1 = self.inception4c_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4c_branch2_1_conv(x_1)
        x_1 = self.inception4c_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4c_branch3_0_conv(x_2)
        x_2 = self.inception4c_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4c_branch3_1_conv(x_2)
        x_2 = self.inception4c_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4c_branch4_0(x_3)
        x_3 = self.inception4c_branch4_1_conv(x_3)
        x_3 = self.inception4c_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4d_branch1_conv(x_0)
        x_0 = self.inception4d_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4d_branch2_0_conv(x_1)
        x_1 = self.inception4d_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4d_branch2_1_conv(x_1)
        x_1 = self.inception4d_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4d_branch3_0_conv(x_2)
        x_2 = self.inception4d_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4d_branch3_1_conv(x_2)
        x_2 = self.inception4d_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4d_branch4_0(x_3)
        x_3 = self.inception4d_branch4_1_conv(x_3)
        x_3 = self.inception4d_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception4e_branch1_conv(x_0)
        x_0 = self.inception4e_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception4e_branch2_0_conv(x_1)
        x_1 = self.inception4e_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception4e_branch2_1_conv(x_1)
        x_1 = self.inception4e_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception4e_branch3_0_conv(x_2)
        x_2 = self.inception4e_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception4e_branch3_1_conv(x_2)
        x_2 = self.inception4e_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception4e_branch4_0(x_3)
        x_3 = self.inception4e_branch4_1_conv(x_3)
        x_3 = self.inception4e_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.maxpool4(x)
        x_0 = x
        x_0 = self.inception5a_branch1_conv(x_0)
        x_0 = self.inception5a_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception5a_branch2_0_conv(x_1)
        x_1 = self.inception5a_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception5a_branch2_1_conv(x_1)
        x_1 = self.inception5a_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception5a_branch3_0_conv(x_2)
        x_2 = self.inception5a_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception5a_branch3_1_conv(x_2)
        x_2 = self.inception5a_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception5a_branch4_0(x_3)
        x_3 = self.inception5a_branch4_1_conv(x_3)
        x_3 = self.inception5a_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x_0 = x
        x_0 = self.inception5b_branch1_conv(x_0)
        x_0 = self.inception5b_branch1_bn(x_0)
        x_0 = F.relu(x_0, inplace=True)
        x_1 = x
        x_1 = self.inception5b_branch2_0_conv(x_1)
        x_1 = self.inception5b_branch2_0_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_1 = self.inception5b_branch2_1_conv(x_1)
        x_1 = self.inception5b_branch2_1_bn(x_1)
        x_1 = F.relu(x_1, inplace=True)
        x_2 = x
        x_2 = self.inception5b_branch3_0_conv(x_2)
        x_2 = self.inception5b_branch3_0_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_2 = self.inception5b_branch3_1_conv(x_2)
        x_2 = self.inception5b_branch3_1_bn(x_2)
        x_2 = F.relu(x_2, inplace=True)
        x_3 = x
        x_3 = self.inception5b_branch4_0(x_3)
        x_3 = self.inception5b_branch4_1_conv(x_3)
        x_3 = self.inception5b_branch4_1_bn(x_3)
        x_3 = F.relu(x_3, inplace=True)
        x = torch.cat([x_0,x_1,x_2,x_3], 1)
        x = self.avgpool(x)
        x = x.view(x.size(0), -1)
        x = self.fc(x)
        return x

def googlenet(**kwargs):
    return GoogLeNet(**kwargs)
