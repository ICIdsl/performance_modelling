import torch
import torch.nn as nn
import torch.nn.functional as F

class ResNet50(nn.Module):
    def __init__(self, num_classes=10):
        super().__init__()

        self.conv1 = nn.Conv2d(3, 62, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        self.bn1 = nn.BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        self.layer1_0_conv1 = nn.Conv2d(62, 63, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_bn1 = nn.BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_conv2 = nn.Conv2d(63, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_0_bn2 = nn.BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_conv3 = nn.Conv2d(63, 251, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_bn3 = nn.BatchNorm2d(251, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_downsample_0 = nn.Conv2d(62, 251, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_downsample_1 = nn.BatchNorm2d(251, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv1 = nn.Conv2d(251, 63, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_1_bn1 = nn.BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv2 = nn.Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_1_bn2 = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv3 = nn.Conv2d(64, 251, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_1_bn3 = nn.BatchNorm2d(251, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv1 = nn.Conv2d(251, 63, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_2_bn1 = nn.BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv2 = nn.Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_2_bn2 = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv3 = nn.Conv2d(64, 251, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_2_bn3 = nn.BatchNorm2d(251, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv1 = nn.Conv2d(251, 127, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_0_bn1 = nn.BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv2 = nn.Conv2d(127, 125, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer2_0_bn2 = nn.BatchNorm2d(125, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv3 = nn.Conv2d(125, 482, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_0_bn3 = nn.BatchNorm2d(482, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_downsample_0 = nn.Conv2d(251, 482, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer2_0_downsample_1 = nn.BatchNorm2d(482, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv1 = nn.Conv2d(482, 127, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_1_bn1 = nn.BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv2 = nn.Conv2d(127, 127, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_1_bn2 = nn.BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv3 = nn.Conv2d(127, 482, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_1_bn3 = nn.BatchNorm2d(482, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv1 = nn.Conv2d(482, 127, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_2_bn1 = nn.BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv2 = nn.Conv2d(127, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_2_bn2 = nn.BatchNorm2d(126, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv3 = nn.Conv2d(126, 482, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_2_bn3 = nn.BatchNorm2d(482, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv1 = nn.Conv2d(482, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_3_bn1 = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv2 = nn.Conv2d(128, 127, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_3_bn2 = nn.BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv3 = nn.Conv2d(127, 482, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_3_bn3 = nn.BatchNorm2d(482, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv1 = nn.Conv2d(482, 255, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_0_bn1 = nn.BatchNorm2d(255, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv2 = nn.Conv2d(255, 252, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer3_0_bn2 = nn.BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv3 = nn.Conv2d(252, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_0_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_downsample_0 = nn.Conv2d(482, 939, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer3_0_downsample_1 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv1 = nn.Conv2d(939, 253, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_1_bn1 = nn.BatchNorm2d(253, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv2 = nn.Conv2d(253, 253, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_1_bn2 = nn.BatchNorm2d(253, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv3 = nn.Conv2d(253, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_1_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv1 = nn.Conv2d(939, 255, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_2_bn1 = nn.BatchNorm2d(255, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv2 = nn.Conv2d(255, 254, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_2_bn2 = nn.BatchNorm2d(254, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv3 = nn.Conv2d(254, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_2_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv1 = nn.Conv2d(939, 253, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_3_bn1 = nn.BatchNorm2d(253, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv2 = nn.Conv2d(253, 254, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_3_bn2 = nn.BatchNorm2d(254, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv3 = nn.Conv2d(254, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_3_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv1 = nn.Conv2d(939, 250, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_4_bn1 = nn.BatchNorm2d(250, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv2 = nn.Conv2d(250, 251, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_4_bn2 = nn.BatchNorm2d(251, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv3 = nn.Conv2d(251, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_4_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv1 = nn.Conv2d(939, 252, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_5_bn1 = nn.BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv2 = nn.Conv2d(252, 253, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_5_bn2 = nn.BatchNorm2d(253, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv3 = nn.Conv2d(253, 939, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_5_bn3 = nn.BatchNorm2d(939, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv1 = nn.Conv2d(939, 503, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_0_bn1 = nn.BatchNorm2d(503, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv2 = nn.Conv2d(503, 502, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer4_0_bn2 = nn.BatchNorm2d(502, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv3 = nn.Conv2d(502, 1965, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_0_bn3 = nn.BatchNorm2d(1965, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_downsample_0 = nn.Conv2d(939, 1965, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer4_0_downsample_1 = nn.BatchNorm2d(1965, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv1 = nn.Conv2d(1965, 505, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_1_bn1 = nn.BatchNorm2d(505, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv2 = nn.Conv2d(505, 503, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer4_1_bn2 = nn.BatchNorm2d(503, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv3 = nn.Conv2d(503, 1965, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_1_bn3 = nn.BatchNorm2d(1965, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv1 = nn.Conv2d(1965, 504, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_2_bn1 = nn.BatchNorm2d(504, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv2 = nn.Conv2d(504, 505, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer4_2_bn2 = nn.BatchNorm2d(505, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv3 = nn.Conv2d(505, 1965, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_2_bn3 = nn.BatchNorm2d(1965, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.avgpool = nn.AdaptiveAvgPool2d(output_size=(1, 1))
        self.fc = nn.Linear(in_features=1965, out_features=1000, bias=True)

    def forward(self, x):
        x = self.conv1(x)
        x = self.bn1(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool(x)
        x_main = x
        x_main = self.layer1_0_conv1(x_main)
        x_main = self.layer1_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_0_conv2(x_main)
        x_main = self.layer1_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_0_conv3(x_main)
        x_main = self.layer1_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer1_0_downsample_0(x_residual)
        x_residual = self.layer1_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer1_1_conv1(x_main)
        x_main = self.layer1_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_1_conv2(x_main)
        x_main = self.layer1_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_1_conv3(x_main)
        x_main = self.layer1_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer1_2_conv1(x_main)
        x_main = self.layer1_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_2_conv2(x_main)
        x_main = self.layer1_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_2_conv3(x_main)
        x_main = self.layer1_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_0_conv1(x_main)
        x_main = self.layer2_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_0_conv2(x_main)
        x_main = self.layer2_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_0_conv3(x_main)
        x_main = self.layer2_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer2_0_downsample_0(x_residual)
        x_residual = self.layer2_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_1_conv1(x_main)
        x_main = self.layer2_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_1_conv2(x_main)
        x_main = self.layer2_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_1_conv3(x_main)
        x_main = self.layer2_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_2_conv1(x_main)
        x_main = self.layer2_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_2_conv2(x_main)
        x_main = self.layer2_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_2_conv3(x_main)
        x_main = self.layer2_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_3_conv1(x_main)
        x_main = self.layer2_3_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_3_conv2(x_main)
        x_main = self.layer2_3_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_3_conv3(x_main)
        x_main = self.layer2_3_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_0_conv1(x_main)
        x_main = self.layer3_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_0_conv2(x_main)
        x_main = self.layer3_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_0_conv3(x_main)
        x_main = self.layer3_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer3_0_downsample_0(x_residual)
        x_residual = self.layer3_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_1_conv1(x_main)
        x_main = self.layer3_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_1_conv2(x_main)
        x_main = self.layer3_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_1_conv3(x_main)
        x_main = self.layer3_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_2_conv1(x_main)
        x_main = self.layer3_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_2_conv2(x_main)
        x_main = self.layer3_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_2_conv3(x_main)
        x_main = self.layer3_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_3_conv1(x_main)
        x_main = self.layer3_3_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_3_conv2(x_main)
        x_main = self.layer3_3_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_3_conv3(x_main)
        x_main = self.layer3_3_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_4_conv1(x_main)
        x_main = self.layer3_4_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_4_conv2(x_main)
        x_main = self.layer3_4_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_4_conv3(x_main)
        x_main = self.layer3_4_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_5_conv1(x_main)
        x_main = self.layer3_5_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_5_conv2(x_main)
        x_main = self.layer3_5_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_5_conv3(x_main)
        x_main = self.layer3_5_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_0_conv1(x_main)
        x_main = self.layer4_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_0_conv2(x_main)
        x_main = self.layer4_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_0_conv3(x_main)
        x_main = self.layer4_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer4_0_downsample_0(x_residual)
        x_residual = self.layer4_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_1_conv1(x_main)
        x_main = self.layer4_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_1_conv2(x_main)
        x_main = self.layer4_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_1_conv3(x_main)
        x_main = self.layer4_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_2_conv1(x_main)
        x_main = self.layer4_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_2_conv2(x_main)
        x_main = self.layer4_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_2_conv3(x_main)
        x_main = self.layer4_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x = self.avgpool(x)
        x = x.view(x.size(0), -1)
        x = self.fc(x)
        return x

def resnet50(**kwargs):
    return ResNet50(**kwargs)
