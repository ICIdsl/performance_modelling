import torch
import torch.nn as nn
import torch.nn.functional as F

class ResNet50(nn.Module):
    def __init__(self, num_classes=10):
        super().__init__()

        self.conv1 = nn.Conv2d(3, 52, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
        self.bn1 = nn.BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.maxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        self.layer1_0_conv1 = nn.Conv2d(52, 46, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_bn1 = nn.BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_conv2 = nn.Conv2d(46, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_0_bn2 = nn.BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_conv3 = nn.Conv2d(53, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_bn3 = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_0_downsample_0 = nn.Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_0_downsample_1 = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv1 = nn.Conv2d(128, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_1_bn1 = nn.BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv2 = nn.Conv2d(56, 51, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_1_bn2 = nn.BatchNorm2d(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_1_conv3 = nn.Conv2d(51, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_1_bn3 = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv1 = nn.Conv2d(128, 54, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_2_bn1 = nn.BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv2 = nn.Conv2d(54, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer1_2_bn2 = nn.BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer1_2_conv3 = nn.Conv2d(56, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer1_2_bn3 = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv1 = nn.Conv2d(128, 101, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_0_bn1 = nn.BatchNorm2d(101, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv2 = nn.Conv2d(101, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer2_0_bn2 = nn.BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_conv3 = nn.Conv2d(96, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_0_bn3 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_0_downsample_0 = nn.Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer2_0_downsample_1 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv1 = nn.Conv2d(256, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_1_bn1 = nn.BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv2 = nn.Conv2d(104, 95, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_1_bn2 = nn.BatchNorm2d(95, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_1_conv3 = nn.Conv2d(95, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_1_bn3 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv1 = nn.Conv2d(256, 99, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_2_bn1 = nn.BatchNorm2d(99, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv2 = nn.Conv2d(99, 102, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_2_bn2 = nn.BatchNorm2d(102, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_2_conv3 = nn.Conv2d(102, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_2_bn3 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv1 = nn.Conv2d(256, 97, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_3_bn1 = nn.BatchNorm2d(97, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv2 = nn.Conv2d(97, 101, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer2_3_bn2 = nn.BatchNorm2d(101, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer2_3_conv3 = nn.Conv2d(101, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer2_3_bn3 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv1 = nn.Conv2d(256, 193, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_0_bn1 = nn.BatchNorm2d(193, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv2 = nn.Conv2d(193, 204, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer3_0_bn2 = nn.BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_conv3 = nn.Conv2d(204, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_0_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_0_downsample_0 = nn.Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer3_0_downsample_1 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv1 = nn.Conv2d(512, 194, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_1_bn1 = nn.BatchNorm2d(194, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv2 = nn.Conv2d(194, 187, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_1_bn2 = nn.BatchNorm2d(187, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_1_conv3 = nn.Conv2d(187, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_1_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv1 = nn.Conv2d(512, 189, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_2_bn1 = nn.BatchNorm2d(189, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv2 = nn.Conv2d(189, 202, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_2_bn2 = nn.BatchNorm2d(202, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_2_conv3 = nn.Conv2d(202, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_2_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv1 = nn.Conv2d(512, 203, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_3_bn1 = nn.BatchNorm2d(203, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv2 = nn.Conv2d(203, 204, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_3_bn2 = nn.BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_3_conv3 = nn.Conv2d(204, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_3_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv1 = nn.Conv2d(512, 194, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_4_bn1 = nn.BatchNorm2d(194, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv2 = nn.Conv2d(194, 204, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_4_bn2 = nn.BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_4_conv3 = nn.Conv2d(204, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_4_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv1 = nn.Conv2d(512, 193, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_5_bn1 = nn.BatchNorm2d(193, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv2 = nn.Conv2d(193, 200, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer3_5_bn2 = nn.BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer3_5_conv3 = nn.Conv2d(200, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer3_5_bn3 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv1 = nn.Conv2d(512, 402, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_0_bn1 = nn.BatchNorm2d(402, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv2 = nn.Conv2d(402, 387, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        self.layer4_0_bn2 = nn.BatchNorm2d(387, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_conv3 = nn.Conv2d(387, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_0_bn3 = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_0_downsample_0 = nn.Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        self.layer4_0_downsample_1 = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv1 = nn.Conv2d(1024, 392, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_1_bn1 = nn.BatchNorm2d(392, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv2 = nn.Conv2d(392, 393, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer4_1_bn2 = nn.BatchNorm2d(393, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_1_conv3 = nn.Conv2d(393, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_1_bn3 = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv1 = nn.Conv2d(1024, 395, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_2_bn1 = nn.BatchNorm2d(395, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv2 = nn.Conv2d(395, 389, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        self.layer4_2_bn2 = nn.BatchNorm2d(389, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.layer4_2_conv3 = nn.Conv2d(389, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        self.layer4_2_bn3 = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.avgpool = nn.AdaptiveAvgPool2d(output_size=(1, 1))
        self.fc = nn.Linear(in_features=1024, out_features=1000, bias=True)

    def forward(self, x):
        x = self.conv1(x)
        x = self.bn1(x)
        x = F.relu(x, inplace=True)
        x = self.maxpool(x)
        x_main = x
        x_main = self.layer1_0_conv1(x_main)
        x_main = self.layer1_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_0_conv2(x_main)
        x_main = self.layer1_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_0_conv3(x_main)
        x_main = self.layer1_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer1_0_downsample_0(x_residual)
        x_residual = self.layer1_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer1_1_conv1(x_main)
        x_main = self.layer1_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_1_conv2(x_main)
        x_main = self.layer1_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_1_conv3(x_main)
        x_main = self.layer1_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer1_2_conv1(x_main)
        x_main = self.layer1_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_2_conv2(x_main)
        x_main = self.layer1_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer1_2_conv3(x_main)
        x_main = self.layer1_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_0_conv1(x_main)
        x_main = self.layer2_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_0_conv2(x_main)
        x_main = self.layer2_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_0_conv3(x_main)
        x_main = self.layer2_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer2_0_downsample_0(x_residual)
        x_residual = self.layer2_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_1_conv1(x_main)
        x_main = self.layer2_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_1_conv2(x_main)
        x_main = self.layer2_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_1_conv3(x_main)
        x_main = self.layer2_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_2_conv1(x_main)
        x_main = self.layer2_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_2_conv2(x_main)
        x_main = self.layer2_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_2_conv3(x_main)
        x_main = self.layer2_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer2_3_conv1(x_main)
        x_main = self.layer2_3_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_3_conv2(x_main)
        x_main = self.layer2_3_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer2_3_conv3(x_main)
        x_main = self.layer2_3_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_0_conv1(x_main)
        x_main = self.layer3_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_0_conv2(x_main)
        x_main = self.layer3_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_0_conv3(x_main)
        x_main = self.layer3_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer3_0_downsample_0(x_residual)
        x_residual = self.layer3_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_1_conv1(x_main)
        x_main = self.layer3_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_1_conv2(x_main)
        x_main = self.layer3_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_1_conv3(x_main)
        x_main = self.layer3_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_2_conv1(x_main)
        x_main = self.layer3_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_2_conv2(x_main)
        x_main = self.layer3_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_2_conv3(x_main)
        x_main = self.layer3_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_3_conv1(x_main)
        x_main = self.layer3_3_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_3_conv2(x_main)
        x_main = self.layer3_3_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_3_conv3(x_main)
        x_main = self.layer3_3_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_4_conv1(x_main)
        x_main = self.layer3_4_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_4_conv2(x_main)
        x_main = self.layer3_4_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_4_conv3(x_main)
        x_main = self.layer3_4_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer3_5_conv1(x_main)
        x_main = self.layer3_5_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_5_conv2(x_main)
        x_main = self.layer3_5_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer3_5_conv3(x_main)
        x_main = self.layer3_5_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_0_conv1(x_main)
        x_main = self.layer4_0_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_0_conv2(x_main)
        x_main = self.layer4_0_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_0_conv3(x_main)
        x_main = self.layer4_0_bn3(x_main)
        x_residual = x
        x_residual = self.layer4_0_downsample_0(x_residual)
        x_residual = self.layer4_0_downsample_1(x_residual)
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_1_conv1(x_main)
        x_main = self.layer4_1_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_1_conv2(x_main)
        x_main = self.layer4_1_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_1_conv3(x_main)
        x_main = self.layer4_1_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x_main = x
        x_main = self.layer4_2_conv1(x_main)
        x_main = self.layer4_2_bn1(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_2_conv2(x_main)
        x_main = self.layer4_2_bn2(x_main)
        x_main = F.relu(x_main, inplace=True)
        x_main = self.layer4_2_conv3(x_main)
        x_main = self.layer4_2_bn3(x_main)
        x_residual = x
        x = F.relu(x_main + x_residual, inplace=True)
        x = self.avgpool(x)
        x = x.view(x.size(0), -1)
        x = self.fc(x)
        return x

def resnet50(**kwargs):
    return ResNet50(**kwargs)
